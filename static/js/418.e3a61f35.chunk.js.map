{"version":3,"file":"static/js/418.e3a61f35.chunk.js","mappings":"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","sources":["views/wallet/TxTable.js","views/wallet/progess.js","views/wallet/Nfts.js"],"sourcesContent":["import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n\nconst columns = [\n    { id: 'name', label: 'Name', minWidth: 170 },\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n    {\n        id: 'population',\n        label: 'Population',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US')\n    },\n    {\n        id: 'size',\n        label: 'Size\\u00a0(km\\u00b2)',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US')\n    },\n    {\n        id: 'density',\n        label: 'Density',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2)\n    }\n];\n\nfunction createData(name, code, population, size) {\n    const density = population / size;\n    return { name, code, population, size, density };\n}\n\nconst rows = [\n    createData('India', 'IN', 1324171354, 3287263),\n    createData('China', 'CN', 1403500365, 9596961),\n    createData('Italy', 'IT', 60483973, 301340),\n    createData('United States', 'US', 327167434, 9833520),\n    createData('Canada', 'CA', 37602103, 9984670),\n    createData('Australia', 'AU', 25475400, 7692024),\n    createData('Germany', 'DE', 83019200, 357578),\n    createData('Ireland', 'IE', 4857000, 70273),\n    createData('Mexico', 'MX', 126577691, 1972550),\n    createData('Japan', 'JP', 126317000, 377973),\n    createData('France', 'FR', 67022000, 640679),\n    createData('United Kingdom', 'GB', 67545757, 242495),\n    createData('Russia', 'RU', 146793744, 17098246),\n    createData('Nigeria', 'NG', 200962417, 923768),\n    createData('Brazil', 'BR', 210147125, 8515767)\n];\n\nexport default function StickyHeadTable() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Box sx={{ width: '100%', mr: 1 }}>\n                <LinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box sx={{ minWidth: 35 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired\n};\n\nexport default function LinearWithValueLabel() {\n    const [progress, setProgress] = React.useState(10);\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\n        }, 800);\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <Box sx={{ width: '100%' }}>\n            <LinearProgressWithLabel value={progress} />\n        </Box>\n    );\n}\n","import { styled } from '@mui/material/styles';\nimport { Card } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nimport MainCard from 'ui-component/cards/MainCard';\n\nimport StickyHeadTable from './TxTable';\nimport LinearWithValueLabel from './progess';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst Img = styled('img')({\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '30%',\n    maxHeight: '30%'\n});\n\nconst TablerIcons = () => (\n    <MainCard title=\"NFT Info\">\n        <Card sx={{ overflow: 'hidden' }}>\n            <Grid item xs={12} sm container sx={{ float: 'left' }}>\n                <Typography variant=\"h4\">Minting Progess</Typography>\n            </Grid>\n            <Grid item xs={12} sm container sx={{ float: 'left', marginBottom: 5 }}>\n                <LinearWithValueLabel />\n            </Grid>\n            <SubCard>\n                <Grid item xs={12} sm container sx={{ float: 'left' }}>\n                    <StickyHeadTable />\n                </Grid>\n            </SubCard>\n        </Card>\n    </MainCard>\n);\n\nexport default TablerIcons;\n"],"names":["columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","StickyHeadTable","page","setPage","React","rowsPerPage","setRowsPerPage","Paper","sx","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","LinearProgressWithLabel","props","Box","display","alignItems","mr","LinearProgress","variant","Typography","color","Math","round","LinearWithValueLabel","progress","setProgress","timer","setInterval","prevProgress","clearInterval","styled","margin","maxWidth","MainCard","title","Card","Grid","item","xs","sm","container","float","marginBottom","SubCard"],"sourceRoot":""}